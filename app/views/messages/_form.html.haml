= semantic_form_for [chapter, message] do |f|
  - @context_params.each do |key, value|
    = hidden_field_tag key, value
  %h2 To
  - if @race
    .strong #{@race.complete_name} Candidacies:
    #{candidacies_names_and_emails(@race.candidacies)}
    = f.input :race_id, as: :hidden
  -elsif @election
    %h4 #{@election.name}, voters: #{members_names_and_emails(@election.member_group.all_members(@chapter))}
    = f.input :election_id, as: :hidden
    = f.input :chapter_id, as: :hidden
  -elsif @event
    %h4 #{@event.name}, invitees: #{members_names_and_emails(@event.member_group.all_members(@chapter))}
    = f.input :event_id, as: :hidden
    = f.input :chapter_id, as: :hidden
  - else
    = f.input :chapter, as: :select, collection: @chapters, include_blank: false
    = f.input :member_group_id, label: 'Subset', as: :select, collection: member_groups, include_blank: false
  %h2 Content
  = f.input :subject
  .help-text
    %p.in-formtastic When entering the body for the mail message, you can use Markdown syntax to do formatting
    %p.in-formtastic
      We use a library to implement this functionality. Here is a link to examples of how to format
      things like headings, bulleted lists, bold, italics and so.
    %a{href: "https://kramdown.gettalong.org/quickref.html", target: "_blank"} Markdown Help
    %p.in-formtastic
      Aside from general formatting, you can include the following in your message and it will
      be replaced when the mail is sent.
    %ul.in-formtastic
      %li.in-formtastic %logo% - will be replaced with the OurRevolution Logo
      %li.in-formtastic %recipient_name% - will be replaced by the email recipient's name
      - if @race
        %li.in-formtastic %candidate_questionnaire_link% - will be replaced by the link to the candidate's questionnaire
      - elsif @election
        %li.in-formtastic %election_ballot_link% - will be replaced by the link to the election's ballot
      - elsif @event
        %li.in-formtastic %event_link% - will be replaced by the link to the event
  = f.input :body, as: :text, input_html: { rows: 5, cols: 100 }
  = f.submit "Save Draft", class: 'btn btn-sm btn-info btn-with-padding'
  = f.submit "Send", class: 'btn btn-sm btn-primary btn-with-padding'
